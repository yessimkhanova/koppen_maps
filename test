/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var imageCollection = ee.ImageCollection("NASA/GDDP-CMIP6");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
                // THIS STEP 1 OF KOPPEN CLIMATE CLASSIFICATION USING CMIP6 DATA

var path = "FAO/GAUL_SIMPLIFIED_500m/2015/level0"; 
var country_code = 132; // Set the country code for Kazakhstan.
var country = ee.FeatureCollection(path).filter(ee.Filter.eq('ADM0_CODE', country_code)); // Filter the country feature collection for Kazakhstan.
var startDate = ee.Date('2015-01-01');
var endDate = ee.Date('2015-12-31'); 


var models = [
              // 'ACCESS-CM2', 1
              // 'ACCESS-ESM1-5', 2
              // 'BCC-CSM2-MR', 3
              // 'CESM2', 4
              // 'CESM2-WACCM', 5
              // 'CMCC-CM2-SR5', 6
              // 'CMCC-ESM2', 7
              // 'CNRM-CM6-1', 8
              // 'CNRM-ESM2-1', 9
              // 'CanESM5', 10
              // 'EC-Earth3', 11
              // 'EC-Earth3-Veg-LR', 12
              // 'FGOALS-g3',13
              // 'GFDL-CM4', 14
              // 'GFDL-ESM4',  15     
              // 'GISS-E2-1-G', 16
              // 'HadGEM3-GC31-LL',17 
              // // 'HadGEM3-GC31-MM', // This model exluded from calculations, NO DATA
              // // 'IITM-ESM',        // This model exluded from calculations, NO DATA FOR 2100
              // 'INM-CM4-8', 18
              // 'INM-CM5-0', 19
              // 'IPSL-CM6A-LR',20 
              // 'KACE-1-0-G', 21
              // 'KIOST-ESM', 22
              // 'MIROC-ES2L', 23
              // 'MIROC6', 24
              // 'MPI-ESM1-2-HR',25 
              // 'MPI-ESM1-2-LR', 26
              // 'MRI-ESM2-0', 27
              // 'NESM3', 28
              'NorESM2-LM'        // This This model exluded from calculations, NO DATA
              // 'NorESM2-MM', 29
              // 'TaiESM1', 30
              // 'UKESM1-0-LL'31
              ];


// Specify the Earth Engine Image Collection for CMIP6 data and filter it for the scenario
var collection = ee.ImageCollection('NASA/GDDP-CMIP6').filterDate(startDate, endDate)
                                    .select('pr')
                                    .filter(ee.Filter.eq('scenario', 'ssp585'))
                                    .filter(ee.Filter.inList('model', models))
                                    .filterBounds(country)
                                    // .map(function(image) {
                                    //   return image.reproject({
                                    //       crs: 'EPSG:4326',
                                    //       scale: 27830 // Choose an appropriate scale based on your analysis needs
                                    //         })})
                                    ;
// Print the projection of the first image in the collection
print("First image projection:", collection.first().projection());

var reprojectedCollection = collection.map(function(image) {
  return image.setDefaultProjection('EPSG:4326', null, 27830); // Set to 25 km resolution or adjust as needed
});
print ("reprojectedCollection", reprojectedCollection.first().projection());

print(collection)

// // Define start and end date for filtering the ImageCollection
// var startDate = ee.Date('2015-01-01');
// var endDate = ee.Date('2015-12-31');

// // Loop over each year from 1950 to 2014
// for (var year = 2015; year <= 2015; year++) {
  
//   // Define date range for each year
//   var dateRange = ee.DateRange(ee.Date(year + '-01-01'), ee.Date(year + '-12-31'));
  
//   // Filter the ImageCollection for the current year
//   var filteredCollection = collection.filterDate(dateRange);

//   // Specify temperature and precipitation bands
//   var temperatureBand = 'tas';
//   var precipitationBand = 'pr';

//   // Create an ImageCollection of monthly means for temperature and precipitation
//   var monthlyMeansCollection = ee.ImageCollection.fromImages(
//     ee.List.sequence(year, year).map(function (y) {
//       return ee.List.sequence(1, 12).map(function (month) {
        
//         // Filter collection by year and month
//         var monthlyCollection = filteredCollection
//           .filter(ee.Filter.calendarRange(y, y, 'year'))
//           .filter(ee.Filter.calendarRange(month, month, 'month'));

//         // Calculate mean temperature of models for the month 
//         var meanTemperature = monthlyCollection.select(temperatureBand).filter(ee.Filter.inList('model', models))
//                                               .mean().subtract(273) // Convert Kelvin to Celsius
//                                               .rename(['meanTemperature']);

//         // Calculate sum of precipitation for each model
//         var sumPrecipitation = ee.ImageCollection.fromImages(models.map(function(m) {
//           return monthlyCollection.filter(ee.Filter.eq('model', m))
//                                   .select(precipitationBand)
//                                   .sum().multiply(1000).multiply(86400).divide(997) // Convert kg m^-2 s^-1 to mm per month
//                                   .rename('sumPrecipitation');
//         }));
        
//         // Combine mean temperature and mean precipitation for each model
//         return meanTemperature.addBands(sumPrecipitation.select('sumPrecipitation').mean())
//                               .set('year', y).set('month', month);
//       });
//     }).flatten()
//   );

//   // Create multiband images for temperature
//   var temperatureImage = monthlyMeansCollection.select('meanTemperature').toBands().rename(['t1', 't2', 't3', 't4', 't5', 't6', 't7', 't8', 't9', 't10', 't11', 't12']);
//   temperatureImage = temperatureImage.set('year', year).clip(country);
  
//   // Create multiband images for precipitation
//   var precipitationImage = monthlyMeansCollection.select('sumPrecipitation').toBands().rename(['p1', 'p2', 'p3', 'p4', 'p5', 'p6', 'p7', 'p8', 'p9', 'p10', 'p11', 'p12']);
//   precipitationImage = precipitationImage.set('year', year).clip(country);

//   // Combine temperature and precipitation bands into a single multiband image
//   var multiBandImage = temperatureImage.addBands(precipitationImage);
//   multiBandImage = multiBandImage.set('year', year);



//   // Export the multiband image for temperature to Earth Engine Assets
//   Export.image.toAsset({
//     image: temperatureImage,
//     description: 't_' + year + '_ssp245' + '_ensemble_mean_test',
//     assetId: 'users/kalamkas/test/' + 't_' + year + 'ssp245' + '_ensemble_mean',
//     crs: 'EPSG:4326',
//     scale: 27830 // Resolution of the source dataset is 27830 meters, so it is set by default
//   });
//     // Comment: Export temperature image to your Earth Engine Assets.
//     // Make sure to change the assetId to your desired location.
//     // Example: 'users/your_username/your_asset_folder/temp' + year + '-avgmodels'
//     // Exported images will be stored in your asset and will be used in the next step (Step 2).
    
//   // Export the multiband image for precipitation to Earth Engine Assets
//   Export.image.toAsset({
//     image: precipitationImage,
//     description: 'pr_' + year + '_ssp245' + '_ensemble_mean_test',
//     assetId: 'users/kalamkas/test/' + 'pr_' + year + 'ssp245' + '_ensemble_mean',
//     crs: 'EPSG:4326',
//     scale: 27830 // Resolution of the source dataset is 27830 meters, so it is set by default
//   });
//     // Comment: Export precipitation image to your Earth Engine Assets.
//     // Make sure to change the assetId to your desired location.
//     // Example: 'users/your_username/your_asset_folder/pr' + year + '-avgmodels'
//     // Exported images will be stored in your asset and will be used in the next step (Step 2).

// }